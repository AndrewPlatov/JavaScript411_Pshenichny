# Написать, чтобы компьютер играл с человеков в "быков и коров".
# Компьютер загадывает число из 4х РАЗНЫХ цифр (можно упростить задачу, не запрещая компьютеру повторять цифры).
# Человек попытка за попыткой угадывает число. Если цифра в попытке стоит на своем месте, она называется бык.
# Если цифра есть, но стоит на другом месте, она корова. После каждой попытки надо выдавать диагностику: 1 бык, 2 коровы.
# Можно упростить задачу, не указывая окончания существительных: (1 б, 3 к).

import random

# Генерируем случайное число из 4 неповторяющихся цифр
def generate_number():
    digits = random.sample(range(10), 4)  # Генерируем 4 уникальные цифры
    return ''.join(map(str, digits))      # Преобразуем в строку

# Возвращаем количество быков и коров
def get_bulls_and_cows(guess, secret):
    bulls = 0
    cows = 0
    secret_count = [0] * 10  # Счетчик для цифр в загаданном числе
    guess_count = [0] * 10   # Счетчик для цифр в попытке

# -------------------------------------- ПОЯСНЕНИЕ ЛОГИКИ ----------------------------------------------------------------------------- #
# Выражение [0] * 10 в создает список, состоящий из 10 элементов, каждый из которых равен 0.
# Предположим, загаданное число — "1234", а игрок вводит "4321".
# В процессе подсчета быков: bulls будет равен 0, так как ни одна цифра не совпадает по позиции.
# Подсчет secret_count и guess_count:
# secret_count будет: [0, 1, 1, 1, 1, 0, 0, 0, 0, 0] (один раз встречается 1, 2, 3 и 4)
# guess_count будет: [0, 1, 1, 1, 1, 0, 0, 0, 0, 0] (аналогично)
# Подсчет коров:
# Мы проходим по всем индексам от 0 до 9 и суммируем минимальные значения из secret_count и guess_count. 
# В данном случае, для каждой цифры от 1 до 4 будет 1, что даст в итоге 4 коровы.
# ------------------------------------------------------------------------------------------------------------------------------------- #

    # Подсчет быков и заполнение счетчиков
    for i in range(4):
        if guess[i] == secret[i]:
            bulls += 1
        else:
            secret_count[int(secret[i])] += 1
            guess_count[int(guess[i])] += 1

    # Подсчет коров
    for i in range(10):
        cows += min(secret_count[i], guess_count[i])

    return bulls, cows

# Начинаем саму игру
def play_game():
    print("Добро пожаловать в игру 'Быки и коровы'!")
    secret_number = generate_number()
    attempts = 0                        # обнуляем количество попыток, чтобы в конце узнать сколько раз мы пытались угадать

    # Этот цикл будет выполняться бесконечно, пока не будет выполнено условие выхода, т.е. пока не отгадаем
    while True:
        guess = input("Введите вашу попытку (4 неповторяющиеся цифры): ")
        
        # проверка что у нас есть 4 цифры, что они действительно цифры, а не другие символы и превращание в множество,
        # дабы проверить длину множество и убедиться, что у нас всем 4 цифры уникальны
        if len(guess) != 4 or not guess.isdigit() or len(set(guess)) != 4:
            print("Пожалуйста, введите 4 неповторяющиеся цифры.")
            continue                    # нужно чтобы запрашивать у пользователя ввод, пока он не введет корректные 4 неповторяющиеся цифры
        
        attempts += 1
        bulls, cows = get_bulls_and_cows(guess, secret_number)
        
        print(f"{bulls} б, {cows} к")
        
        if bulls == 4:
            print(f"Поздравляем! Вы угадали число {secret_number} за {attempts} попыток.")
            break

play_game()